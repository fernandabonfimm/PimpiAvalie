üì¶ API - Documenta√ß√£o de Rotas
Esta API permite gerenciar administradores, usu√°rios B2B, categorias, produtos e avalia√ß√µes em m√∫ltiplos passos.

üîê Admin
1. Criar administrador
POST localhost:8080/api/admin
Body:
json
{
  "email": "admin@email.com",
  "senha": "123456"
}

2. Login do administrador
POST localhost:8080/api/admin/login
Body:
json
{
  "email": "admin@email.com",
  "senha": "123456"
}

3. Buscar admin por ID
GET localhost:8080/api/admin/:id

üë• B2B (Usu√°rios)
1. Criar usu√°rio B2B
POST /b2b
Body:
json
{
  "nome": "Jo√£o da Silva",
  "email": "joao@email.com",
  "celular": "11999999999",
  "cpf": "12345678900"
}

2. Listar todos os B2Bs
GET localhost:8080/api/b2b
Buscar B2B por ID

3. Listar b2b por id
GET /b2b/:id

üìÇ Categoria
1. Criar nova categoria
POST localhost:8080/api/categoria
Body:
json
{
  "nome": "Eletr√¥nicos",
  "idAdmin": "id_do_admin"
}

2. Listar todas as categorias
GET localhost:8080/api/categoria
Buscar categoria por ID

2. Listar categoria por id
GET localhost:8080/api/categoria/:id

üì¶ Produto
1. Criar novo produto
POST localhost:8080/api/produto
Body:

json
{
  "nome": "Fone de Ouvido",
  "valor": "199.90",
  "idCategoria": "id_da_categoria"
}

2. Listar todos os produtos
GET localhost:8080/api/produto
Buscar produto por ID

2. Listar produto po id
GET localhost:8080/api/produto/:id

üìù Avalia√ß√£o em 2 Etapas
‚û§ Step 1: Criar avalia√ß√£o (dados iniciais)
POST localhost:8080/api/avaliacao/step1
Body:

json
{
  "idB2B": "id_do_b2b",
  "local": "Loja X",
  "cidade": "S√£o Paulo",
  "estado": "SP"
}
Resposta esperada:

json
Copiar
Editar
{
  "_id": "id_da_avaliacao",
  ...
}
üí° Frontend deve armazenar o _id retornado no localStorage para usar no Step 2:
exemplo: localStorage.setItem('avaliacaoId', response.data._id);

‚úÖ Step 2: Finalizar avalia√ß√£o (dados do produto, categoria e opini√£o)
PUT localhost:8080/api/avaliacao/step2/:idAvaliacao
Substitua :idAvaliacao pelo ID armazenado no step 1.

Body:

json
{
  "idProduto": "id_do_produto",
  "idCategoria": "id_da_categoria",
  "nivel": "5",
  "comprariaNovamente": "sim",
  "descricao": "Produto excelente, entrega r√°pida."
}

Exemplo de uso com Axios (Step 2):

const idAvaliacao = localStorage.getItem('avaliacaoId');
axios.put(`/avaliacao/step2/${idAvaliacao}`, {
  idProduto: '...',
  idCategoria: '...',
  nivel: '5',
  comprariaNovamente: 'sim',
  descricao: 'Muito bom!'
});

üìÑ Outras rotas de Avalia√ß√£o
1. Listar todas as avalia√ß√µes
GET localhost:8080/api/avaliacao
Buscar avalia√ß√£o por ID

2. listar avaliacao por id
GET /avaliacao/:id

‚úÖ Checklist para o Frontend
Criar usu√°rio B2B ou usar um existente.

Fazer o Step 1 com os dados iniciais da compra.

Armazenar o id da avalia√ß√£o no localStorage.

Realizar o Step 2 com dados do produto, categoria e opini√£o final.